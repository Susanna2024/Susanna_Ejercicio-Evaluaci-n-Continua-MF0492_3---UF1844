/* * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template */// Autora: Susanna Signorettipackage biblioteca;import java.util.ArrayList;import java.util.List;// Clase principal para la Bibliotecapublic class Biblioteca {    public static void main(String[] args) {        // Crear Autores        Autor rowling = new Autor("J.K. Rowling");        Autor hesse = new Autor("Hermann Hesse");        Autor dannunzio = new Autor("Gabriele D'Annunzio");        Autor suskind = new Autor("Patrik Suskind");        // Crear lista global para libros        List<Libro> listaLibros = new ArrayList<>();        // Crear libros de J.K. Rowling y agregarlos a la lista global        listaLibros.add(new Libro("Harry Potter y la piedra filosofal", rowling, false));        listaLibros.add(new Libro("Harry Potter y la cámara secreta", rowling, true));        // Mostrar libros de J.K. Rowling        System.out.println("=== J.K. Rowling publica libros ===");        for (Libro libro : listaLibros) {            System.out.println(" - " + libro.getTitulo());        }        // Otros libros publicados        Libro libro3 = new Libro("Siddharta", hesse, true);        Libro libro4 = new Libro("El difunto Matias Pascal", dannunzio, true);        Libro libro5 = new Libro("El perfume", suskind, true);        listaLibros.add(libro3);        listaLibros.add(libro4);        listaLibros.add(libro5);        System.out.println("\n=== Otros libros publicados ===");        System.out.println(" - " + libro3.getTitulo());        System.out.println(" - " + libro4.getTitulo());        System.out.println(" - " + libro5.getTitulo());        // Crear Usuario y MiembroPremium        Usuario usuario = new Usuario("Jack");        MiembroPremium miembro = new MiembroPremium("Mary");        // Usuario toma prestado un libro        System.out.println("\nUsuario " + usuario.getNombre() + " toma prestado: " + libro3.getTitulo());        boolean prestado = usuario.tomarPrestado(libro3.getTitulo());        // Mostrar cambios de disponibilidad        System.out.println("\n=== Cambios de disponibilidad ===");        if (prestado) {            libro3.marcarPrestado(); // Cambiar a no disponible            System.out.println("El libro '" + libro3.getTitulo() + "' ahora no está disponible.");        }                   // Usuario toma prestado un libro        boolean prestado1 = usuario.tomarPrestado(listaLibros.get(1).getTitulo());                              // Usuario devuelve un libro (Harry Potter y la cámara secreta)        System.out.println("\nUsuario " + usuario.getNombre() + " devuelve: " + listaLibros.get(1).getTitulo());        boolean devuelto = usuario.devolverLibro(listaLibros.get(1).getTitulo());      // Mostrar cambios de disponibilidad        System.out.println("\n=== Cambios de disponibilidad ===");        if (devuelto) {            listaLibros.get(1).marcarDevuelto(); // Cambiar a disponible            System.out.println("El libro '" + listaLibros.get(1).getTitulo() + "' ahora  está disponible.");        }                             // MiembroPremium intenta tomar prestado y reservar        System.out.println("\nMiembroPremium " + miembro.getNombre() + " intenta tomar prestado: " + listaLibros.get(0).getTitulo());        boolean prestado2 = miembro.tomarPrestado(listaLibros.get(0).getTitulo());        if (!prestado2) {            System.out.println("El libro '" + listaLibros.get(0).getTitulo() + "' no está disponible. Reservalo.");            miembro.reservarLibro(listaLibros.get(0));        } else {            System.out.println("Libro prestado directamente a  " + miembro.getNombre());        }                // Miembro premium intenta reservar el libroSystem.out.println("\nMiembroPremium " + miembro.getNombre() + " quiere reservar el libro: " + libro5.getTitulo());// Verifica si el libro está disponible para el préstamoboolean prestado3 = miembro.tomarPrestado(libro5.getTitulo()); if (prestado) {    // Si el libro está disponible, se presta directamente al miembro    System.out.println("El libro '" + libro5.getTitulo() + "' está disponible. Prestado directamente a " + miembro.getNombre());} else {    // Si el libro no está disponible, se realiza la reserva    System.out.println("El libro '" + libro5.getTitulo() + "' no está disponible. Reservando...");    miembro.reservarLibro(libro5); // Se reserva el libro para el miembro} // Mostrar cambios de disponibilidad        System.out.println("\n=== Cambios de disponibilidad ===");        if (prestado) {            libro5.marcarPrestado(); // Cambiar a no disponible            System.out.println("El libro '" + libro5.getTitulo() + "' ahora no está disponible."); }           // Mostrar la lista completa con su disponibilidad        System.out.println("\n=== Lista de libros y su disponibilidad ===");        for (Libro libro : listaLibros) {            String disponibilidad = libro.estaDisponible() ? "Disponible" : "No disponible";            System.out.println(" - " + libro.getTitulo() + " - " + disponibilidad);        }                                         }}